import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.util.List;
import java.util.Optional;

import static org.junit.jupiter.api.Assertions.*;

/**
 * UserTest.java
 *
 * This is a unit test class for UserService, generated by CodeRabbits.
 * It demonstrates the tool's ability to create a functional test suite
 * to verify the correctness of the business logic.
 */
public class UserTest {

    private UserService userService;

    /**
     * Sets up the test environment before each test.
     * This method is automatically generated to ensure a clean state for every test case.
     */
    @BeforeEach
    public void setUp() {
        userService = new UserService();
        userService.addUser(new User(1, "Alice", "alice@example.com"));
        userService.addUser(new User(2, "Bob", "bob@example.com"));
    }

    @Test
    public void testAddUser() {
        User newUser = new User(3, "Charlie", "charlie@example.com");
        userService.addUser(newUser);

        List<User> users = userService.getAllUsers();
        assertEquals(3, users.size(), "The user list size should be 3 after adding a new user.");
        assertTrue(users.stream().anyMatch(u -> u.getId() == 3), "The new user should be in the list.");
    }

    @Test
    public void testFindUserById_found() {
        Optional<User> foundUser = userService.findUserById(1);
        assertTrue(foundUser.isPresent(), "User with ID 1 should be found.");
        assertEquals("Alice", foundUser.get().getName(), "The found user's name should be Alice.");
    }

    @Test
    public void testFindUserById_notFound() {
        Optional<User> notFoundUser = userService.findUserById(99);
        assertFalse(notFoundUser.isPresent(), "User with ID 99 should not be found.");
    }

    @Test
    public void testGetAllUsers() {
        List<User> users = userService.getAllUsers();
        assertEquals(2, users.size(), "The initial user list should contain 2 users.");
        assertEquals("Bob", users.get(1).getName(), "The second user in the list should be Bob.");
    }
}
